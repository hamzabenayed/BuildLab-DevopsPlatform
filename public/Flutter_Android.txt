name: Flutter CI

on:
  workflow_dispatch:
  push:
    branches:
      - Mondherbenhajammar_TODOS066
    
# on: push    # Default will running for every branch.
    
jobs:
  build-android:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'beta' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Creating the key.properties file
    - run: |
       echo keyPassword=${{ secrets.KEY_PASSWORD }} > $GITHUB_WORKSPACE/android/key.properties
       echo storePassword=${{ secrets.KEY_STORE }} >> $GITHUB_WORKSPACE/android/key.properties
       echo keyAlias=${{ secrets.KEY_ALIAS }} >> $GITHUB_WORKSPACE/android/key.properties
          
  # Decoding base64 key into a file
    - run: echo "${{ secrets.KEYSTORE2 }}" | base64 --decode > android/app/key.jks
    
 # build appbundle
    - run: 
          flutter build appbundle
    
  # Make appbundle downloadable
    - name: Upload artefato
      uses: actions/upload-artifact@v2
      with:
          name: appbundle
          path: build/app/outputs/bundle/release
    
    # Build apk.
    - run: flutter build apk
    
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v1
      with:
        name: release-apk
        path: build/app/outputs/apk/release/app-release.apk

  build-ios:
    # This job will run on macOS virtual machine
    runs-on: macos-latest
    steps:
    
    # Setup the flutter environment.
    - uses: actions/checkout@v1
    - uses: subosito/flutter-action@v1
      with:
        channel: 'beta' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
    - run: flutter pub get

    # Build iOS app.
    - run: flutter build ios --release --no-codesign

    # Create iOS IPA.
    - run: mkdir -p Payload && mv build/ios/iphoneos/Runner.app Payload/ && zip -r app.ipa Payload/

    # Upload generated IPA to the artifacts.
    - uses: actions/upload-artifact@v1
      with:
        name: release-ipa
        path: app.ipa